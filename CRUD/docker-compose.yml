version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - .:/var/www/html
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=mysql://${DB_USER:-crm}:${DB_PASSWORD:-crm}@db:3306/${DB_NAME:-crm}?serverVersion=8.0
      - REDIS_URL=redis://redis:6379
      - APP_ENV=dev
      - APP_SECRET=${APP_SECRET:-your_secret_here}
      - DB_NAME=${DB_NAME:-crm}
      - DB_USER=${DB_USER:-crm}
      - DB_PASSWORD=${DB_PASSWORD:-crm}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-root}
    ports:
      - "8000:8000"
    networks:
      - crm-network

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - crm-network

  db:
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=${DB_NAME:-crm}
      - MYSQL_USER=${DB_USER:-crm}
      - MYSQL_PASSWORD=${DB_PASSWORD:-crm}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-root}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - crm-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crm-network
    restart: always

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"
    environment:
      - PMA_HOST=db
      - PMA_USER=root
      - PMA_PASSWORD=${DB_ROOT_PASSWORD:-root}
    depends_on:
      - db
    networks:
      - crm-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - crm-network

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - crm-network

  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - crm-network

  jenkins:
    build:
      context: .
      dockerfile: docker/jenkins/Dockerfile
    user: root
    ports:
      - "8085:8080"
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=true
    networks:
      - crm-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8082:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /dev/disk/:/dev/disk/:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis
    networks:
      - crm-network

volumes:
  db_data:
  redis_data:
  prometheus-data:
  grafana-data:
  jenkins-data:

networks:
  crm-network:
    driver: bridge
